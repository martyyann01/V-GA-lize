import QtQuick 2.0
import QtQuick.Controls 2.3
import QtQuick.Layouts 1.3
import QtQuick.Shapes 1.0
import QtCharts 2.3

import gaviz 1.0


Frame {
    id: graphView

    Layout.preferredWidth: 0.3 * parent.width
    Layout.fillHeight: true

    property alias fitToGeneration : fitToGenerationCheckBox.checked
    property int axisWidth: 1
    property int selectedGeneration: 0
    property int selectedFitness0: 0
    property int selectedFitness1: 0
    property int maxFitness0:  gaviz.getMaxFitness(selectedFitness0)
    property int maxFitness1:  gaviz.getMaxFitness(selectedFitness1)
    property int minFitness0:  gaviz.getMinFitness(selectedFitness0)
    property int minFitness1:  gaviz.getMinFitness(selectedFitness1)


    ColumnLayout {
        anchors.fill: parent

        RowLayout {
            spacing: 20

            Frame {
                id: viewTitle
                Label {
                    text: "GRAPH VIEW"
                    font.pixelSize: 24
                }
            }

            Label {
                text: "Generation " + selectedGeneration
                font.pixelSize: 24
            }
        }

        RowLayout {

            ComboBox {
                id: fitnesslist0
                currentIndex: 0
                model: gaviz.getObjectiveFunctions()
                width: 200
                onCurrentIndexChanged: selectedFitness0 = currentIndex
            }

            ComboBox {
                id: fitnesslist1
                currentIndex: 0
                model: gaviz.getObjectiveFunctions()
                width: 200
                onCurrentIndexChanged: selectedFitness1 = currentIndex
            }

                CheckBox {
                    id: fitToGenerationCheckBox
                    onCheckStateChanged: {
                        updateBounds()
                    }
                }

                Label {
                    text: "Fit to gen"
                }

        }

        Slider {
            Layout.preferredWidth: parent.width - 20
            Layout.leftMargin: 20
            from: 0
            value: 0
            to: gaviz.getNbGenerations() - 1

            onValueChanged: {
                selectedGeneration = value
                updateBounds()
            }
        }

        //property var sz : gaviz.getNbIndInGeneration(selectedGeneration)
        //property var fitness0 : gaviz.getIndividualProperty(selectedGeneration, 0, selectedFitness0, IndividualProperty.Fitness)
        //property var fitness1 : gaviz.getIndividualProperty(selectedGeneration, 0, selectedFitness1, IndividualProperty.Fitness)

        ChartView {
            width: 400
            height: 300
            antialiasing: true

            ScatterSeries {
                id: scatter1
                Component.onCompleted: {
                        var sz = gaviz.getNbIndInGeneration(selectedGeneration)
                        var fitness0 = gaviz.getIndividualProperty(selectedGeneration, 0, selectedFitness0, IndividualProperty.Fitness)
                        var fitness1 = gaviz.getIndividualProperty(selectedGeneration, 0, selectedFitness1, IndividualProperty.Fitness)

                        for (var i=0; i<sz; i++) {
                            scatter1.append(fitness0[i], fitness1[i])
                            }
                    }
                }
            }


        ChartView {
            width: 400
            height: 300
            antialiasing: true
            LineSeries {
                id: avgseries
                Component.onCompleted: {
                        var gsz = gaviz.getNbGenerations()
                        for (var i=0; i<gsz; i++) {
                            avgseries.append(i, gaviz.getStats(i, selectedFitness0, StatsProperty.AVERAGE))
                          }
                    }
            }
        }
        
        ChartView {
            width: 400
            height: 300
            antialiasing: true
            LineSeries {
                id: minseries
                Component.onCompleted: {
                        var gsz = gaviz.getNbGenerations()
                        for (var i=0; i<gsz; i++) {
                            avgseries.append(i, gaviz.getStats(i, selectedFitness0, StatsProperty.AVERAGE))
                          }
                    }
            }
        }

        ChartView {
            width: 400
            height: 300
            antialiasing: true
            SplineSeries {
                id: avgseries2
                name: "SplineSeries"
                XYPoint { x: 0; y: 0.0 }
                XYPoint { x: 1.1; y: 3.2 }
                XYPoint { x: 1.9; y: 2.4 }
                XYPoint { x: 2.1; y: 2.1 }
                XYPoint { x: 2.9; y: 2.6 }
                XYPoint { x: 3.4; y: 2.3 }
                XYPoint { x: 4.1; y: 3.1 }
            }
        }


        ChartView {
            width: 400
            height: 300
            antialiasing: true
            SplineSeries {
                id: avgseries3
                name: "SplineSeries"
                XYPoint { x: 0; y: 0.0 }
                XYPoint { x: 1.1; y: 3.2 }
                XYPoint { x: 1.9; y: 2.4 }
                XYPoint { x: 2.1; y: 2.1 }
                XYPoint { x: 2.9; y: 2.6 }
                XYPoint { x: 3.4; y: 2.3 }
                XYPoint { x: 4.1; y: 3.1 }
            }
        }


    }

    function updateBounds ()
    {
        minFitness0 = fitToGeneration ? gaviz.getMinFitness(selectedGeneration, selectedFitness0) :
                                        gaviz.getMinFitness(selectedFitness0)
        minFitness1 = fitToGeneration ? gaviz.getMinFitness(selectedGeneration, selectedFitness1) :
                                        gaviz.getMinFitness(selectedFitness1)
        maxFitness0 = fitToGeneration ? gaviz.getMaxFitness(selectedGeneration, selectedFitness0) :
                                        gaviz.getMaxFitness(selectedFitness0)
        maxFitness1 = fitToGeneration ? gaviz.getMaxFitness(selectedGeneration, selectedFitness1) :
                                        gaviz.getMaxFitness(selectedFitness1)
    }
}

