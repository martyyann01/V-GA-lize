#ifndef INDIVIDUAL_H
#define INDIVIDUAL_H

#include <QString>
#include <QObject>


union ChromosomeType {
    float *arrayf;
    int *arrayI;
    double *arrayD;
    char *arrayC;
    QString *arrayS;
};

enum ChromosomeDataType { FLOAT, INTEGER, DOUBLE, CHAR, STRING };

class Individual : public QObject
{
    Q_OBJECT

public:
    Individual();
    Individual(int generation, int cluster, int parent1, int parent2, float fitness, ChromosomeType chromosome, int rank);

    enum Property {
        Generation = Qt::UserRole + 1,
        Cluster,
        Parent1,
        Parent2,
        Fitness,
        Rank,
        Chromosome
    };
    Q_ENUMS(Property)


    void setGeneration(int g);
    void setCluster(int c);
    void setParents(int p0, int p1);
    void setRank(int rank);
    void setFitness(float f);
    void setChromosomes(ChromosomeType chromosomes, float fitness);

    int getGeneration() const;
    int getCluster() const;
    int getParent1() const;
    int getParent2() const;
    int getRank() const;
    float getFitness() const;
    ChromosomeType getChromosome() const;

private:
    int generation;
    int cluster;
    int parent1;
    int parent2;
    float fitness;
    int rank;
    ChromosomeType chromosome;
};

#endif // INDIVIDUAL_H
