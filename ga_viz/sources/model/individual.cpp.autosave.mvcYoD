#include "individual.h"

#include <QDebug>

template <class T>
Individual<T>::Individual() :
    generation(-1), cluster(-1), parent1(-1), parent2(-1), fitness(0), chromosome(nullptr)
{

}

template <class T>
Individual<T>::Individual(int generation, int cluster, int parent1, int parent2, float fitness, T* chromosome)
{
    this->setProperties(generation, cluster,  parent1, parent2, fitness, chromosome);
}


template <class T>
void Individual<T>::setGeneration(int g);

template <class T>
void setCluster(int c);

template <class T>
void setParents(int p0, int p1);

template <class T>
void setChromosomes(T* chromosomes, float fitness);

template <class T>
void Individual<T>::setProperties(int generation, int cluster, int parent1, int parent2,
                                  float fitness, T* chromosome)
{
    this->generation = generation;
    this->cluster = cluster;
    this->fitness = fitness;
    this->parent1 = parent1;
    this->parent2 = parent2;
    this->chromosome = chromosome;
}

template <class T>
int Individual<T>::getGeneration() const
{
    return generation;
}

template <class T>
int Individual<T>::getCluster() const
{
    return cluster;
}

template <class T>
int Individual<T>::getParent1() const
{
    return parent1;
}

template <class T>
int Individual<T>::getParent2() const
{
    return parent2;
}

template <class T>
float Individual<T>::getFitness() const
{
    return fitness;
}

template <class T>
T* Individual<T>::getChromosome() const
{
    return chromosome;
}

